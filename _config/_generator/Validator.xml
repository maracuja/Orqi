<?xml version="1.0"?>
<files>
	<file>
		<info>
			<name>Base#Objectname#Validator.php</name>
			<location>_base/_Validator</location>
		</info>
		<section>
			<template>
				class Base#Objectname#Validator extends Validator
				{
					#section.getters#
					#section.setters#
					#section.populate#
					#section.testconditions#
				}
			</template>
		</section>
		
		<section id="getters">
			<template>
				function Get#Field#() { return $this->#field#; }
			</template> 
		</section>
		
		<section label="setters">
			<template>
				function Set#Field#($#field#='') { $this->#field# = $#field#; }
			</template> 
		</section>
		
		<section id="populate">
			<template>
				function Populate($post='')
				{
					if ($post instanceof #Field#)
					{
						#section.objectset#
					}
					else
					{
						#section.postset
					}
				}
			</template>
		</section>
		
		<section id="objectset">
			<case condition="isobject">$this->#field# = $post->Get#Field#()->GetId();</case>
			<case condition="default">$this->#field# = $post->Get#Field#();</case>
		</section>

		<section id="postset">
			<case condition="default">$this->#field# = $post['#field#'];</case>
		</section>
		
		<section id="testconditions">
			private function TestConditions()
			{
				$errors = array();
				
				#section.validationrules#
				
				return $errors;
			}
		</section>
		
		<section id="validationrules">
			<case condition="alphanumeric">if (!$this->IsValidAlphanumeric($this->#field#)</case>
			<case condition="slug">IsValidSlug($this->#field#)</case>
			<case condition="int">IsValidInt($this->#field#)</case>				
			<case condition="email">IsValidEmail($this->#field#)</case>
			<case condition="date">IsValidDate($this->#field#)</case>
			<case condition="bool">IsValidBool($this->#field#)</case>
			<case condition="decimal">IsValidDecimal($this->#field#)</case>
			<case condition="url">IsValidURL($this->#field#)</case>
			<case condition="colour">IsValidColour($this->#field#)</case>
			<case condition="file">ValidateFile($value, $file_types=array())</case>
			<case condition="default">
				if (empty($this->#field#)) $this->errors[] = new Message('#field#', "The #field# should not be empty.");
			</case>
		</section>
	</file>
	
	<file>
		<info>
			<name>#Objectname#Validator.php</name>
			<location>_base/_validator</location>
		</info>
		<section>
			<template>
				class #Objectname#Validator extends Base#Objectname#Validator
				{
					#section.testconditions#
				}
			</template>
		</section>
		<section id="testconditions">
			private function TestConditions()
			{
				$errors = parent::TestConditions();
				// put your custom validation rules here
				return $errors;
			}
		</section>
	</file>
	
	<file>
		<info>
			<name>Base#Objectname#ValidatorTest.php</name>
			<location>_test/_base/_validator</location>
		</info>
		<section>
			<template>
				class Base#Objectname#ValidatorTest extends PHPUnit
				{
				}
			</template>
		</section>
	</file>
	
	<file>
		<info>
			<name>#Objectname#ValidatorTest.php</name>
			<location>_test/_classes/_validator</location>
		</info>
		<section>
			<template>
				class #Objectname#ValidatorTest extends Base#Objectname#ValidatorTest
				{
				}
			</template>
		</section>
	</file>
</files>