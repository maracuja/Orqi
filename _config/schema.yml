data:
  user:
    _attributes:    { phpName: User, authenticator: true }
    _orderby:       [ username, name ]
    _listcolumns:   [ username, name ]
    _searchon:      [ name, address, postcode, username, email ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    name:           { type: varchar, size: 255, required: true }
    username:       { type: varchar, size: 255, required: true, searchable: true, confirm: true }
    email:          { type: varchar, size: 255, required: true, searchable: true, confirm: true }
    password:       { type: varchar, size: 255, required: true, confirm: true }
    md5word:        { type: varchar, size: 255, required: true, calculated: "md5($this->GetPassword())" }
    activated:      { type: tinyint, required: true }
    usergroup:      { type: int, required: true, linkedObject: Usergroup, dbFieldName: usergroup }
    address1:       { type: varchar, size: 255 }
    address2:       { type: varchar, size: 255 }
    address3:       { type: varchar, size: 255 }
    city:           { type: varchar, size: 255, searchable: true }
    county:         { type: varchar, size: 255, searchable: true }
    postcode:       { type: varchar, size: 8, searchable: true }
    telephone:      { type: varchar, size: 255 }
    flickrusername: { type: varchar, size: 255 }
    photo:          { type: int, linkedObject: Fileupload }
    lastbookingsview: { type: int, calculated: "mktime()" }
    
  venue:
    _attributes:    { phpName: Venue }
    _listcolumns:   [ name ]
    _searchon:      [ name ]
    _orderby:       [ name ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    name:           { type: varchar, size: 255, required: true }
    slug:           { type: varchar, size: 255, required: true, calculated: "SlugGenerator::GetSlug($this->GetName())" }
    user:           { type: int, linkedObject: User }
    advanceperiod:  { type: int }
    packages:       { type: many }
    gamezones:      { type: many }
    blogs:          { type: many }
    pages:          { type: many }
    showgamezones:  { type: tinyint }
    showpackages:   { type: tinyint }
    showgalleries:  { type: tinyint }
    showdownloads:  { type: tinyint }
    showblog:       { type: tinyint }
    showfaq:        { type: tinyint }
    showkidspages:  { type: tinyint }
    showadultspages: { type: tinyint }
    showbookings: 	{ type: tinyint }
    visible:        { type: tinyint }
    
  package:
    _attributes:    { phpName: Package }
    _listcolumns:   [ name, price ]
    _searchon:      [ name, description ]
    _orderby:       [ displayorder, name ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    venue:          { type: int, required: true, linkedObject: Venue, calculated: "$this->GetMapper()->session->user->GetVenue()->GetId()" }
    packagecategory: { type: int, required: true, linkedObject: Packagecategory }
    name:           { type: varchar, size: 255, required: true }
    slug:           { type: varchar, size: 255, required: true, calculated: "SlugGenerator::GetSlug($this->GetName())" }
    price:          { type: double, precision: "6, 2" }
    content:        { type: text }
    deposit:        { type: double, precision: "6, 2" }
    lunchyesno:     { type: tinyint }
    paintballs:     { type: int }
    games:          { type: int }
    fulldayyesno:   { type: tinyint }
    displayorder:   { type: int }
    visible:        { type: tinyint }
    
  packagecategory:
    _attributes:    { phpName: Packagecategory }
    _listcolumns:   [ name, venue->name ]
    _orderby:       [ name ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    venue:          { type: int, required: true, linkedObject: Venue }
    name:           { type: varchar, size: 255, required: true }
    slug:           { type: varchar, size: 255, required: true, calculated: "SlugGenerator::GetSlug($this->GetName())" }
    infotext:       { type: text }
    keywords:       { type: varchar, size: 255 }
    description:    { type: text }
    heading:        { type: varchar, size: 255 }
    packages:       { type: many }

  booking:
    _attributes:    { phpName: Booking }
    _listcolumns:   [ name, price, numplayers ]
    _orderby:       [ timestamp desc, name ]
    id:             { type: int, required: true, primaryKey: true }
    name:           { type: varchar, size: 255, required: true }
    address1:       { type: varchar, size: 255, required: true }
    address2:       { type: varchar, size: 255 }
    address3:       { type: varchar, size: 255 }
    city:           { type: varchar, size: 255, required: true }
    postcode:       { type: varchar, size: 255, required: true }
    telephone:      { type: varchar, size: 255, required: true }
    email:          { type: varchar, size: 255, required: true }
    bookingdate:    { type: timestamp, required: true }
    ampmfullday:    { type: varchar, size: 10, required: true }
    timestamp:      { type: int, calculated: "mktime()" }
    venue:          { type: int, required: true, linkedObject: Venue }
    package:        { type: int, required: true, linkedObject: Package }
    vouchercode:    { type: varchar, size: 255 }
    numplayers:     { type: int, required: true }
    isdeposit:      { type: tinyint, required: true }
    price:          { type: double, precision: "6, 2" }
    status:         { type: varchar, size: 255 }
    paid:           { type: varchar, size: 255 }

  bookeddate:
    _attributes:    { phpName: Bookeddate }
    id:             { type: int, required: true, primaryKey: true }
    venue:          { type: int, required: true, linkedObject: Venue }
    timestamp:      { type: timestamp, searchable: true }

  gamezone:
    _attributes:    { phpName: Gamezone }
    _listcolumns:   [ title ]
    _orderby:       [ title ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    venue:          { type: int, required: true, linkedObject: Venue, calculated: "$this->GetMapper()->session->user->GetVenue()->GetId()" }
    title:          { type: varchar, size: 255, required: true }
    slug:           { type: varchar, size: 255, required: true, calculated: "SlugGenerator::GetSlug($this->GetTitle())" }
    label:          { type: varchar, size: 255 }
    keywords:       { type: varchar, size: 255 }
    description:    { type: text }
    heading:        { type: varchar, size: 255 }
    carousel1:      { type: int, linkedObject: Fileupload }
    carousel2:      { type: int, linkedObject: Fileupload }
    carousel3:      { type: int, linkedObject: Fileupload }
    carousel4:      { type: int, linkedObject: Fileupload }
    video:          { type: int, linkedObject: Fileupload }
    content:        { type: text }
    displayorder:   { type: int }
    visible:        { type: tinyint }

  page:
    _attributes:    { phpName: Page }
    _listcolumns:   [ title ]
    _orderby:       [ title ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    venue:          { type: int, required: true, linkedObject: Venue, calculated: "$this->GetMapper()->session->user->GetVenue()->GetId()" }
    section:        { type: int, required: true, linkedObject: Section }
    title:          { type: varchar, size: 255, required: true }
    slug:           { type: varchar, size: 255, required: true, calculated: "SlugGenerator::GetSlug($this->GetTitle())" }
    label:          { type: varchar, size: 255 }
    keywords:       { type: varchar, size: 255 }
    description:    { type: text }
    heading:        { type: varchar, size: 255 }
    carousel1:      { type: int, linkedObject: Fileupload }
    carousel2:      { type: int, linkedObject: Fileupload }
    carousel3:      { type: int, linkedObject: Fileupload }
    carousel4:      { type: int, linkedObject: Fileupload }
    video:          { type: int, linkedObject: Fileupload }
    content:        { type: text }
    visible:		{ type: tinyint }
    
  section:
    _attributes:    { phpName: Section }
    _orderby:       [ name ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    name:           { type: varchar, size: 255, required: true }
    slug:           { type: varchar, size: 255, required: true, calculated: "SlugGenerator::GetSlug($this->GetName())" }
    
  blog:
    _attributes:    { phpName: Blog }
    _orderby:       [ timestamp desc ]
    _listcolumns:   [ title ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    venue:          { type: int, required: true, linkedObject: Venue, calculated: "$this->GetMapper()->session->user->GetVenue()->GetId()" }
    title:          { type: varchar, size: 255, required: true }
    slug:           { type: varchar, size: 255, required: true, calculated: "SlugGenerator::GetSlug($this->GetTitle())" }
    content:        { type: text, required: true }
    timestamp:      { type: timestamp, required: true, calculated: "mktime()" }
    user:           { type: int, required: true, linkedObject: User, calculated: "$this->GetMapper()->session->user->GetId()" }
    photo:          { type: int, linkedObject: Fileupload }
    youtube:        { type: varchar, size: 255 }
    comments:       { type: many }
    
  fileupload:
    _attributes:    { phpName: Fileupload, fileupload: true }
    _listcolumns:   [ label ]
    _orderby:       [ label ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    user:           { type: int, required: true, linkedObject: User, calculated: "$this->GetMapper()->session->user->GetId()" }
    size:           { type: varchar, size: 255, required: true }
    type:           { type: varchar, size: 255, required: true }
    name:           { type: varchar, size: 255, required: true }
    label:          { type: varchar, size: 255, required: true, searchable: true }
    alttext:        { type: varchar, size: 255, required: true }
    
  download:
    _attributes:    { phpName: Download }
    _orderby:       [ name ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    name:           { type: varchar, size: 255, required: true }
    description:    { type: text, required: true }
    timestamp:      { type: timestamp, required: true, calculated: "mktime()" }
    file:           { type: int, required: true, linkedObject: Fileupload }
    
  faq:
    _attributes:    { phpName: Faq }
    _listcolumns:   [ question ]
    _orderby:       [ question ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    venue:          { type: int, required: true, linkedObject: Venue, calculated: "$this->GetMapper()->session->user->GetVenue()->GetId()" }
    question:       { type: varchar, size: 255, required: true }
    answer:         { type: text, required: true }
    
  usergroup:
    _attributes:    { phpName: Usergroup }
    _listcolumns:   [ name, level ]
    _orderby:       [ level desc ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    name:           { type: varchar, size: 255, required: true }
    level:          { type: int, required: true, searchable: true }
    
  task:
    _attributes:    { phpName: Task }
    _orderby:       [ controller, function ]
    _listcolumns:   [ controller, function, usergroup->name ]
    id:             { type: int, required: true, primaryKey: true, autoincrement: true }
    controller:     { type: varchar, required: true, size: 255 }
    function:       { type: varchar, required: true, size: 255 }
    usergroup:      { type: int, required: true, linkedObject: Usergroup }
    
  seo:
    _attributes:         { phpName: Seo }
    id:                  { type: int, required: true, primaryKey: true, autoincrement: true }
    keywords:            { type: text }
    description:         { type: text }
    gamezonekeywords:    { type: text }
    gamezonedescription: { type: text }
    packagekeywords:     { type: text }
    packagedescription:  { type: text }
    gallerykeywords:     { type: text }
    faqkeywords:         { type: text }
    faqdescription:      { type: text }
    downloadkeywords:    { type: text }
    downloaddescription: { type: text }
    blogkeywords:        { type: text }
    blogdescription:     { type: text }
